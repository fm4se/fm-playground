name: Deploy Documentation

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  docs:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper versioning with mike

      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt

      - name: Copy CHANGELOG.md to docs directory
        run: cp CHANGELOG.md docs/

      - name: Determine version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            VERSION="${{ github.event.release.tag_name }}"
            # Extract major.minor from version (e.g., v2.6.11 -> 2.6)
            MAJOR_MINOR=$(echo $VERSION | sed 's/^v//' | cut -d. -f1,2)
            echo "version=${VERSION}" >> $GITHUB_OUTPUT
            echo "alias=${MAJOR_MINOR}.x latest" >> $GITHUB_OUTPUT
            echo "title=v${MAJOR_MINOR}.x" >> $GITHUB_OUTPUT
          else
            # For manual dispatch, use latest tag
            VERSION=$(git describe --tags --abbrev=0)
            MAJOR_MINOR=$(echo $VERSION | sed 's/^v//' | cut -d. -f1,2)
            echo "version=${VERSION}" >> $GITHUB_OUTPUT
            echo "alias=${MAJOR_MINOR}.x latest" >> $GITHUB_OUTPUT
            echo "title=v${MAJOR_MINOR}.x" >> $GITHUB_OUTPUT
          fi

      - name: Deploy with mike
        run: |
          mike deploy --push --update-aliases ${{ steps.version.outputs.version }} ${{ steps.version.outputs.alias }} --title="${{ steps.version.outputs.title }}"
          mike set-default --push latest
